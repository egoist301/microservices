version: "3.9"
services:
  mysql-song:
    image: mysql
    container_name: mysql-song
    environment:
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD", 'mysqladmin', 'ping', '-h', 'localhost', '-P', '3306', '-u', 'root', '-p$$MYSQL_ROOT_PASSWORD' ]
      timeout: 20s
      retries: 10

  mysql-resource:
    image: mysql
    container_name: mysql-resource
    environment:
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3307:3306"
    healthcheck:
      test: [ "CMD", 'mysqladmin', 'ping', '-h', 'localhost', '-P', '3307', '-u', 'root', '-p$$MYSQL_ROOT_PASSWORD' ]
      timeout: 20s
      retries: 10

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  localstack:
    image: localstack/localstack
    container_name: "localstack"
    ports:
      - "4566:4566"
      - "4571:4571"
    environment:
      DEFAULT_REGION: us-west-1
      SERVICES: s3
      EDGE_PORT: 4566
      AWS_ACCESS_KEY_ID: localstack
      AWS_SECRET_ACCESS_KEY: localstack
      AWS_DEFAULT_REGION: us-west-1
      HOSTNAME: localstack
    labels:
      - "virtual.host=*.eu-west-1.amazonaws.com *.dualstack.eu-west-1.amazonaws.com *.s3.eu-west-1.amazonaws.com *.s3.dualstack.eu-west-1.amazonaws.com *.amazonaws.com *.s3.amazonaws.test *.amazonaws.test amazonaws.test"
      - "virtual.tls=internal"
    healthcheck:
      test: [ "CMD", "awslocal", "s3", "ls" ]
      interval: 5s

  eureka-server:
    container_name: eureka-server
    build: ./eurekaserver
    ports:
      - "8761:8761"
    expose:
      - '8761'

  resource-service:
    container_name: resource-service
    build: ./resourceService
    ports:
      - "8081:8081"
    depends_on:
      mysql-resource:
        condition: service_healthy
    env_file:
      - ./resourceService/resourceService.env
  song-service:
    container_name: song-service
    build: ./songService
    ports:
      - "8082:8082"
    depends_on:
      mysql-song:
        condition: service_healthy
    env_file:
      - ./songService/songService.env
  resource-processor:
    container_name: resource-processor
    build: ./resourceProcessor
    ports:
      - "8080:8080"
    env_file:
      - ./resourceProcessor/resourceProcessor.env
    depends_on:
      rabbitmq:
        condition: service_healthy